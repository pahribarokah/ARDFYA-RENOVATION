@startuml

!theme plain
skinparam backgroundColor white
skinparam shadowing false
skinparam handwritten false

' Styling sesuai contoh yang diberikan
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
    BorderThickness 2
    FontSize 11
}

skinparam arrow {
    Color black
    Thickness 2
}

skinparam sequence {
    ArrowColor black
    ActorBorderColor black
    LifeLineBorderColor black
    ParticipantBorderColor #1976D2
    ParticipantBackgroundColor #E3F2FD
    BoxBorderColor black
}

hide footbox

title **Sequence Diagram - UC08: Kelola Profil Customer**

participant "Customer" as Customer
participant "ProfileEditPage" as ProfilePage
participant "CustomerProfileController" as ProfileCtrl
participant "User Model" as UserModel

Customer -> ProfilePage: 1: UpdateProfile (profile_data, action_type)
activate ProfilePage

ProfilePage -> ProfileCtrl: 1.1: update(profile_data, action_type)
activate ProfileCtrl

ProfileCtrl -> UserModel: 1.1.1: find(customer_id)
activate UserModel

UserModel --> ProfileCtrl: 1.1.1.1: currentProfileData()

alt [Update Personal Data]
    ProfileCtrl -> UserModel: 1.1.1.2: update(personal_data)
    UserModel --> ProfileCtrl: 1.1.1.2.1: profileUpdated()
    ProfileCtrl --> ProfilePage: 1.1.1.2.1.1: showUpdateSuccess()
    ProfilePage --> Customer: 1.1.1.2.1.1.1: displaySuccessMessage()
    
else [Change Password]
    ProfileCtrl -> UserModel: 1.1.1.3: validateCurrentPassword()
    
    alt [Valid Current Password]
        UserModel --> ProfileCtrl: 1.1.1.3.1: passwordValid()
        ProfileCtrl -> UserModel: 1.1.1.3.1.1: updatePassword(new_password)
        UserModel --> ProfileCtrl: 1.1.1.3.1.1.1: passwordUpdated()
        ProfileCtrl --> ProfilePage: 1.1.1.3.1.1.1.1: showPasswordSuccess()
        ProfilePage --> Customer: 1.1.1.3.1.1.1.1.1: displayPasswordSuccess()
    else [Invalid Current Password]
        UserModel --> ProfileCtrl: 1.1.1.3.2: passwordInvalid()
        ProfileCtrl --> ProfilePage: 1.1.1.3.2.1: showPasswordError()
        ProfilePage --> Customer: 1.1.1.3.2.1.1: displayPasswordError()
    end
    
else [Upload Profile Photo]
    ProfileCtrl -> UserModel: 1.1.1.4: updateProfilePhoto(photo_data)
    UserModel --> ProfileCtrl: 1.1.1.4.1: photoUpdated()
    ProfileCtrl --> ProfilePage: 1.1.1.4.1.1: showPhotoSuccess()
    ProfilePage --> Customer: 1.1.1.4.1.1.1: displayPhotoSuccess()
end

deactivate UserModel
deactivate ProfileCtrl
deactivate ProfilePage

@enduml
