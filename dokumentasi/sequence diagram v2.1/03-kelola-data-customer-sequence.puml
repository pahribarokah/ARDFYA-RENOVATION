@startuml

!theme plain
skinparam backgroundColor white
skinparam shadowing false
skinparam handwritten false

' Styling sesuai contoh yang diberikan
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
    BorderThickness 2
    FontSize 11
}

skinparam arrow {
    Color black
    Thickness 2
}

skinparam sequence {
    ArrowColor black
    ActorBorderColor black
    LifeLineBorderColor black
    ParticipantBorderColor #1976D2
    ParticipantBackgroundColor #E3F2FD
    BoxBorderColor black
}

hide footbox

title **Sequence Diagram - UC03: Kelola Data Customer**

participant "Admin" as Admin
participant "CustomerManagePage" as CustomerPage
participant "AdminCustomerController" as CustomerCtrl
participant "User Model" as UserModel

Admin -> CustomerPage: 1: ManageCustomer (action, customer_id)
activate CustomerPage

CustomerPage -> CustomerCtrl: 1.1: performAction(action, customer_id)
activate CustomerCtrl

CustomerCtrl -> UserModel: 1.1.1: scopeCustomers()
activate UserModel

alt [View Customer List]
    UserModel --> CustomerCtrl: 1.1.1.1: customersList()
    CustomerCtrl --> CustomerPage: 1.1.1.1.1: displayCustomers()
    CustomerPage --> Admin: 1.1.1.1.1.1: showCustomerList()
    
else [Edit Customer]
    CustomerCtrl -> UserModel: 1.1.1.2: find(customer_id)
    UserModel --> CustomerCtrl: 1.1.1.2.1: customerData()
    
    CustomerCtrl -> UserModel: 1.1.1.2.2: update(customerData)
    UserModel --> CustomerCtrl: 1.1.1.2.2.1: updateSuccess()
    CustomerCtrl --> CustomerPage: 1.1.1.2.2.1.1: showUpdateSuccess()
    CustomerPage --> Admin: 1.1.1.2.2.1.1.1: displaySuccessMessage()
    
else [Delete Customer]
    CustomerCtrl -> UserModel: 1.1.1.3: find(customer_id)
    UserModel --> CustomerCtrl: 1.1.1.3.1: customerData()
    
    CustomerCtrl -> UserModel: 1.1.1.3.2: inquiries()
    UserModel --> CustomerCtrl: 1.1.1.3.2.1: checkDependencies()
    
    alt [Has Dependencies]
        CustomerCtrl -> UserModel: 1.1.1.3.2.1.1: update(status='archived')
        UserModel --> CustomerCtrl: 1.1.1.3.2.1.1.1: customerArchived()
        CustomerCtrl --> CustomerPage: 1.1.1.3.2.1.1.1.1: showArchiveMessage()
    else [No Dependencies]
        CustomerCtrl -> UserModel: 1.1.1.3.2.1.2: delete()
        UserModel --> CustomerCtrl: 1.1.1.3.2.1.2.1: customerDeleted()
        CustomerCtrl --> CustomerPage: 1.1.1.3.2.1.2.1.1: showDeleteMessage()
    end
    
    CustomerPage --> Admin: 1.1.1.3.3: displayActionResult()
end

deactivate UserModel
deactivate CustomerCtrl
deactivate CustomerPage

@enduml
